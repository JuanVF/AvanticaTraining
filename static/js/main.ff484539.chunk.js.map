{"version":3,"sources":["Util/API/constants.js","localStorageMock.js","Images/avantica.png","serviceWorker.js","Util/Alerts.js","Util/ParseData.js","Util/API/FetchTopic.js","Util/API/FetchResource.js","Util/API/FetchLogin.js","Util/API/FetchSignup.js","Util/API/VerifyToken.js","Util/Util.js","Pages/Home/ui.js","Pages/Home/index.js","Components/Modal/index.js","Components/AddTopics/ui.js","Components/AddTopics/index.js","Components/EditTopic/index.js","Components/Selectors/Topic.js","Pages/Topics/ui.js","Pages/Topics/index.js","Components/Input/index.js","Components/EditResource/ui.js","Components/EditResource/index.js","Components/AddResource/ui.js","Components/ResourceError/index.js","Components/AddResource/index.js","Components/Selectors/Resource.js","Pages/MyResources/ui.js","Pages/MyResources/index.js","Components/LoginForm/index.js","Pages/Login/ui.js","Pages/Login/index.js","Components/SignupForm/index.js","Pages/SignUp/ui.js","Pages/SignUp/index.js","Pages/Page404/index.js","Components/SidebarMenu/index.js","Components/Navbar/NavbarLogged.js","Components/Navbar/NavbarUnlogged.js","Components/Navbar/index.js","Components/Layout/index.js","App.js","index.js"],"names":["base_url","LocalStorageMock","this","store","key","value","toString","module","exports","Boolean","window","location","hostname","match","alertIfObjectsAreEmpty","objectCollection","toggleModal","areEmpty","map","item","_","isEqual","alertIfIsNotAnEmail","email","isAnEmail","test","invalidData","objectsEmpty","invalidEmail","parseHomeData","data","property","topics","index","length","push","topic","name","num_resource","found","i","sort","a","b","final_topic","MAX_COUNT","deleteExtraTopics","ls","require","ls_mock","ENV","process","access_token","get","url","setTestToken","params","method","headers","Authorization","fetch","then","res","json","catch","err","console","log","topic_id","body","JSON","stringify","responseStatus","status","getItem","getTopics","getTopic","saveTopic","updateTopic","deleteTopic","id","getAll","save","update","delete","checkHowManyRelationsAre","set","login","fbLogin","signup","signupFB","isValid","Alerts","ParseData","FetchTopic","FetchResource","FetchLogin","FetchSignup","VerifyToken","isAValidToken","HomeUI","props","tableData","undefined","className","scope","generateTableContent","Home","useState","setTableData","useEffect","getTableData","Util","Modal","modalClass","successModal","isVisible","message","AddTopicUI","Fragment","type","placeholder","title","nameValueTitle","style","nameValueAlert","nameValue","onChange","handleInputValues","onClick","handleSaveButton","isModalVisible","modalMessage","AddTopics","event","component","target","itemValues","setState","preventDefault","state","addNewTopic","util","cleanInputs","updateTableData","setTimeout","nameTitle","React","Component","EditTopic","updateData","editId","topicName","handleInput","topicNameTitle","alertIfIsEmpty","closeEditComponent","editItem","prevProps","nextProps","prevState","TopicSelector","showEditComponent","TopicsUI","Topic","openEditComponent","handleDeleteButton","GenerateTableContent","Topics","handleExpiredToken","alert","remove","isConfirmed","prompt","relations","userWantsToDeleteTopic","toLowerCase","document","Input","label","handleInputs","EditResourceUI","descriptionValue","descriptionTitle","urlValue","urlTitle","dropdownValue","dropdownItems","handleDropdownMenu","GenerateDropdownItems","EditResources","componentDidMount","topicIdValue","updateResource","resource_id","resourceIdValue","description","selectedItem","componentsValues","resourceValue","AddResourceUI","handleInputsValues","handleDropdown","ResourceError","to","AddResource","showAddTopicComponent","saveNewResource","cleanInputsValues","updateTableContent","Resource","EditResource","MyResourcesUI","crudStatus","href","MyResources","getResourcesItems","wantToDeleteItem","LoginForm","emailValue","emailTitle","passwordValue","passwordTitle","handleLoginButton","LoginUI","appId","fields","callback","handleFBButton","render","renderProps","Login","accessToken","fbtoken","password","SignupForm","handleSignup","SignUpUI","isASuccessModal","SignUp","insertFBUser","signUp","Page404","src","AvanticaLogo","alt","SidebarMenu","handleLogout","SidebarMenuUnlogged","NavbarLogged","Navbar","NavbarUnlogged","Layout","children","App","exact","path","scroll","top","left","behavior","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff484539.chunk.js","sourcesContent":["const ENV = process.env.NODE_ENV\r\n\r\nconst base_url_dev = 'http://localhost:8080'\r\nconst base_url_prod = 'https://juanvfproaa.herokuapp.com'\r\n\r\nexport const base_url =\r\n  ENV === 'development' || ENV === 'test' ? base_url_dev : base_url_prod\r\n","class LocalStorageMock {\r\n  constructor() {\r\n    this.store = {};\r\n  }\r\n\r\n  clear() {\r\n    this.store = {};\r\n  }\r\n\r\n  getItem(key) {\r\n    return this.store[key] || null;\r\n  }\r\n\r\n  setItem(key, value) {\r\n    this.store[key] = value.toString();\r\n  }\r\n\r\n  removeItem(key) {\r\n    delete this.store[key];\r\n  }\r\n};\r\n\r\nexport default new LocalStorageMock","module.exports = __webpack_public_path__ + \"static/media/avantica.3d84ed28.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\n\r\nfunction alertIfObjectsAreEmpty(objectCollection, toggleModal) {\r\n  var areEmpty = 0;\r\n\r\n  objectCollection.map(item => {\r\n    if (_.isEqual(item, \"\")) areEmpty++;\r\n\r\n    return areEmpty;\r\n  });\r\n\r\n  if (areEmpty > 0) toggleModal(\"Please fill the empty inputs\");\r\n\r\n  return areEmpty > 0;\r\n}\r\n\r\nfunction alertIfIsNotAnEmail(email, toggleModal) {\r\n  let re = /\\S+@\\S+\\.\\S+/;\r\n  let isAnEmail = re.test(email);\r\n\r\n  if (!isAnEmail) {\r\n    toggleModal(\"Please type a correct email\");\r\n  }\r\n\r\n  return isAnEmail;\r\n}\r\n\r\nfunction invalidData(objectCollection, email, toggleModal) {\r\n  const objectsEmpty = !alertIfObjectsAreEmpty(objectCollection, toggleModal);\r\n  const invalidEmail = alertIfIsNotAnEmail(email, toggleModal);\r\n\r\n  return objectsEmpty && invalidEmail;\r\n}\r\n\r\nexport default {\r\n  alertIfObjectsAreEmpty: alertIfObjectsAreEmpty,\r\n  alertIfIsNotAnEmail: alertIfIsNotAnEmail,\r\n  invalidData: invalidData\r\n};\r\n","function parseHomeData(data) {\r\n  let topics = [];\r\n\r\n  data.map((item, index) => {\r\n    if (topics.length === 0) {\r\n      topics.push({\r\n        topic: item.topic.name,\r\n        num_resource: 1\r\n      });\r\n      return index;\r\n    } else {\r\n      let found = false;\r\n      let index;\r\n\r\n      for (let i = 0; i < topics.length; i++) {\r\n        if (topics[i].topic === item.topic.name) {\r\n          found = true;\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        topics[index].num_resource++;\r\n      } else {\r\n        topics.push({\r\n          topic: item.topic.name,\r\n          num_resource: 1\r\n        });\r\n      }\r\n    }\r\n    return topics;\r\n  });\r\n\r\n  topics.sort(dynamicSort(\"num_resource\"));\r\n\r\n  return deleteExtraTopics(topics);\r\n}\r\n\r\nfunction dynamicSort(property) {\r\n  return function(a, b) {\r\n    return a[property] > b[property] ? -1 : a[property] < b[property] ? 1 : 0;\r\n  };\r\n}\r\n\r\nfunction deleteExtraTopics(topics) {\r\n  let final_topic = [];\r\n  let MAX_COUNT = topics.length < 10 ? topics.length : 10;\r\n\r\n  for (let i = 0; i < MAX_COUNT; i++) {\r\n    final_topic.push(topics[i]);\r\n  }\r\n\r\n  return final_topic;\r\n}\r\n\r\nexport default {\r\n  parseHomeData: parseHomeData\r\n};\r\n","const ls = require('local-storage')\r\nconst ls_mock = require('../../localStorageMock')\r\n\r\nconst { base_url } = require('./constants')\r\nconst ENV = process.env.NODE_ENV\r\nlet access_token = ls.get('login_token')\r\n\r\nasync function getTopics() {\r\n  let url = `${base_url}/topic`\r\n  let data\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: access_token\r\n    }\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      data = res\r\n    })\r\n    .catch(err => {\r\n      console.log('An error ocurred while fetching API: ' + err)\r\n    })\r\n\r\n  return data\r\n}\r\n\r\nasync function getTopic(topic_id) {\r\n  let url = `${base_url}/topic/${topic_id}`\r\n  let data\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: access_token\r\n    }\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      data = res\r\n    })\r\n    .catch(err => {\r\n      console.log('An error ocurred while fetching API: ' + err)\r\n    })\r\n\r\n  return data\r\n}\r\n\r\nasync function saveTopic(topic) {\r\n  let url = `${base_url}/topic`\r\n  let responseStatus\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: access_token\r\n    },\r\n    body: JSON.stringify(topic)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      responseStatus = res.status\r\n    })\r\n    .catch(err => {\r\n      console.log('An error ocurred while fetching API: ' + err)\r\n    })\r\n\r\n  return responseStatus\r\n}\r\n\r\nasync function updateTopic(topic) {\r\n  let url = `${base_url}/topic`\r\n  let responseStatus\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: access_token\r\n    },\r\n    body: JSON.stringify(topic)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      responseStatus = res.status\r\n    })\r\n    .catch(err => {\r\n      console.log('An error ocurred while fetching API: ' + err)\r\n    })\r\n\r\n  return responseStatus\r\n}\r\n\r\nasync function deleteTopic(topic_id) {\r\n  let url = `${base_url}/topic/${topic_id}`\r\n  let responseStatus\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: access_token\r\n    }\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      responseStatus = res.status\r\n    })\r\n    .catch(err => {\r\n      console.log('An error ocurred while fetching API: ' + err)\r\n    })\r\n\r\n  return responseStatus\r\n}\r\n\r\nfunction setTestToken() {\r\n  if (ENV === 'test') access_token = ls_mock.getItem('login_token')\r\n}\r\n\r\nexport default {\r\n  getTopics: getTopics,\r\n  getTopic: getTopic,\r\n  saveTopic: saveTopic,\r\n  updateTopic: updateTopic,\r\n  deleteTopic: deleteTopic\r\n}\r\n","const ls = require('local-storage')\r\nconst ls_mock = require('../../localStorageMock')\r\nconst { base_url } = require('./constants')\r\n\r\nconst ENV = process.env.NODE_ENV\r\n\r\nlet access_token = ls.get('login_token')\r\n\r\nasync function getAll() {\r\n  let data\r\n  let url = `${base_url}/resource`\r\n  let params = {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  setTestToken()\r\n\r\n  await fetch(url, params)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      data = res\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  return data\r\n}\r\n\r\nasync function save(body) {\r\n  let url = `${base_url}/resource`\r\n  let status\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: access_token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(body)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      status = res.status\r\n    })\r\n    .catch(err => {\r\n      status = err.status\r\n    })\r\n\r\n  return status\r\n}\r\n\r\nasync function update(body) {\r\n  let url = `${base_url}/resource`\r\n  let status\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'PUT',\r\n    headers: {\r\n      Authorization: access_token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(body)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      status = res.status\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      status = err.status\r\n    })\r\n\r\n  return status\r\n}\r\n\r\nasync function deleteResource(id) {\r\n  let url = `${base_url}/resource/${id}`\r\n  let status\r\n  setTestToken()\r\n\r\n  let params = {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Authorization: access_token,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      status = res.status\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n      status = err.status\r\n    })\r\n\r\n  return status\r\n}\r\n\r\n/***\r\n * This functions is used in /src/Pages/Topic/index.js\r\n * this is util to check if a Topic has relations\r\n * so it can prevent errors on MyResource.js trying to\r\n * find a topic that doesn't exists\r\n * ***/\r\nasync function checkHowManyRelationsAre(topic_id) {\r\n  let url = `${base_url}/resource/relations/`\r\n  let data\r\n  setTestToken()\r\n\r\n  let body = {\r\n    topic_id: topic_id\r\n  }\r\n  let params = {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: access_token,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(body)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      data = res\r\n    })\r\n    .catch(err => {\r\n      console.log(err)\r\n    })\r\n\r\n  return data\r\n}\r\n\r\nfunction setTestToken() {\r\n  if (ENV === 'test') access_token = ls_mock.getItem('login_token')\r\n}\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  save: save,\r\n  update: update,\r\n  delete: deleteResource,\r\n  checkHowManyRelationsAre: checkHowManyRelationsAre\r\n}\r\n","const ls = require('local-storage')\r\nconst { base_url } = require('./constants')\r\n\r\nasync function login(data) {\r\n  let url = `${base_url}/login`\r\n  let params = {\r\n    method: 'POST',\r\n    body: JSON.stringify(data)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => {\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      if (res.Authorization) ls.set('login_token', res.Authorization)\r\n    })\r\n    .catch(err => {\r\n      return null\r\n    })\r\n}\r\n\r\nasync function fbLogin(data) {\r\n  let url = `${base_url}/fb/login`\r\n  let params = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(data)\r\n  }\r\n\r\n  await fetch(url, params)\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      if (res.Authorization) ls.set('login_token', res.Authorization)\r\n    })\r\n    .catch(err => {\r\n      return null\r\n    })\r\n}\r\n\r\nexport default {\r\n  login: login,\r\n  fbLogin: fbLogin\r\n}\r\n","const { base_url } = require('./constants')\r\n\r\nasync function signup(data) {\r\n  let status;\r\n  let url = `${base_url}/signup`;\r\n\r\n  let params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(data)\r\n  };\r\n\r\n  await fetch(url, params)\r\n    .then(res => (status = res.status))\r\n    .catch(err => console.log(err));\r\n\r\n  return status;\r\n}\r\n\r\nasync function signupFB(data) {\r\n  let status;\r\n  let url = `${base_url}/fb/signup`;\r\n\r\n  let params = {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify(data)\r\n  };\r\n\r\n  await fetch(url, params)\r\n    .then(res => (status = res.status))\r\n    .catch(err => console.log(err));\r\n\r\n  return status;\r\n}\r\n\r\nexport default {\r\n  signup: signup,\r\n  signupFB: signupFB\r\n};\r\n","const ls = require('local-storage')\r\nconst ls_mock = require('../../localStorageMock')\r\nconst { base_url } = require('./constants')\r\nconst ENV = process.env.NODE_ENV\r\n\r\nlet access_token = ls.get('login_token')\r\n\r\nasync function isAValidToken() {\r\n  let isValid\r\n  const url = `${base_url}/token/verify`\r\n  setTestToken()\r\n\r\n  const params = {\r\n    method: 'POST',\r\n    headers: {\r\n      Authorization: access_token,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  }\r\n  await fetch(url, params).then(res => {\r\n    switch (res.status) {\r\n      case 200:\r\n        isValid = true\r\n        break\r\n      case 403:\r\n        isValid = false\r\n        break\r\n      default:\r\n        isValid = false\r\n        break\r\n    }\r\n  })\r\n\r\n  return isValid\r\n}\r\n\r\nfunction setTestToken() {\r\n  if (ENV === 'test') access_token = ls_mock.getItem('login_token')\r\n}\r\n\r\nexport default {\r\n  isAValidToken: isAValidToken\r\n}\r\n","import Alerts from \"./Alerts\";\r\nimport ParseData from \"./ParseData\";\r\nimport FetchTopic from \"./API/FetchTopic\";\r\nimport FetchResource from \"./API/FetchResource\";\r\nimport FetchLogin from \"./API/FetchLogin\";\r\nimport FetchSignup from \"./API/FetchSignup\";\r\nimport VerifyToken from \"./API/VerifyToken\";\r\n\r\nexport default {\r\n  Alerts: Alerts,\r\n  ParseData: ParseData,\r\n  FetchTopic: FetchTopic,\r\n  FetchResource: FetchResource,\r\n  FetchLogin: FetchLogin,\r\n  FetchSignup: FetchSignup,\r\n  VerifyToken: VerifyToken\r\n};\r\n","import React from 'react'\r\n\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nexport const HomeUI = props => {\r\n  let tableData = props.tableData\r\n  if (props.tableData === undefined || props.tableData.length === 0) {\r\n    tableData = []\r\n  }\r\n\r\n  return (\r\n    <section className='container home_table_container'>\r\n      <h2 className=\"home_title\">Top ten topics</h2>\r\n      <table className='table table-striped'>\r\n        <thead className='thead-dark'>\r\n          <tr>\r\n            <th scope='col'>Top</th>\r\n            <th scope='col'>Topic</th>\r\n            <th scope='col'>Resources</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{generateTableContent(tableData)}</tbody>\r\n      </table>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst generateTableContent = tableData => {\r\n  let tableContent = tableData.map((item, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{index + 1}</td>\r\n        <td>{item.topic}</td>\r\n        <td>{item.num_resource}</td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return tableContent\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Util from '../../Util/Util'\r\n\r\nimport { HomeUI } from './ui'\r\n\r\nexport const Home = () => {\r\n  const [tableData, setTableData] = useState([])\r\n  useEffect(function() {\r\n    getTableData(setTableData)\r\n  }, [])\r\n\r\n  return <HomeUI tableData={tableData} />\r\n}\r\n\r\nexport async function getTableData(setTableData){\r\n  let tableData = await Util.FetchResource.getAll()\r\n  if (tableData !== undefined) {\r\n    tableData = Util.ParseData.parseHomeData(tableData)\r\n\r\n    setTableData(tableData)\r\n  }\r\n\r\n  return tableData\r\n}\r\n","import React from 'react'\r\n\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nfunction Modal(props) {\r\n  let modalClass = 'alert alert-danger'\r\n\r\n  if (props.successModal) modalClass = 'alert alert-success'\r\n\r\n  if (props.isVisible) {\r\n    return (\r\n      <div className='modal_container'>\r\n        <div className={modalClass}>\r\n          <strong>Message: </strong>\r\n          {props.message}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nexport default Modal\r\n","import React from \"react\";\r\n\r\nimport Modal from \"../Modal/\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport const AddTopicUI = props => (\r\n  <React.Fragment>\r\n    <div className=\"container add_topic_container\">\r\n      <h1>Add Topic</h1>\r\n\r\n      <form className=\"justify-content-start\">\r\n        <label className=\"font-weight-bold \">Name:</label>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          placeholder=\"Topic Name\"\r\n          title={props.nameValueTitle}\r\n          style={props.nameValueAlert}\r\n          value={props.nameValue}\r\n          onChange={props.handleInputValues}\r\n          name=\"name\"\r\n        />\r\n\r\n        <button className=\"btn save_button\" onClick={props.handleSaveButton}>\r\n          Save\r\n        </button>\r\n      </form>\r\n    </div>\r\n    <Modal isVisible={props.isModalVisible} message={props.modalMessage} />\r\n  </React.Fragment>\r\n);\r\n","import React from \"react\";\r\nimport util from \"../../Util/Util\";\r\n\r\nimport { AddTopicUI } from \"./ui\";\r\n\r\nclass AddTopics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      nameValue: \"\",\r\n      nameTitle: \"Please fill out this field\",\r\n      isModalVisible: false,\r\n      modalMessage: \"\"\r\n    };\r\n  }\r\n\r\n  handleInputValues = event => {\r\n    let component = event.target;\r\n    let itemValues = {\r\n      [component.name + \"Value\"]: component.value,\r\n      [component.name + \"Title\"]: \"Please fill out this field\"\r\n    };\r\n\r\n    if (component.value) itemValues[component.name + \"Title\"] = \"\";\r\n\r\n    this.setState(itemValues);\r\n  };\r\n\r\n  handleSaveButton = event => {\r\n    event.preventDefault();\r\n\r\n    let nameValue = this.state.nameValue;\r\n    if (nameValue !== \"\") {\r\n      this.addNewTopic();\r\n    }else{\r\n      this.toggleModal(\"Fill the empty input\")\r\n    }\r\n  };\r\n\r\n  addNewTopic = async function() {\r\n    let topic = {\r\n      name: this.state.nameValue\r\n    };\r\n\r\n    await util.FetchTopic.saveTopic(topic);\r\n    this.cleanInputs();\r\n    this.props.updateTableData();\r\n  };\r\n\r\n  cleanInputs = () => {\r\n    this.setState({\r\n      nameValue: \"\"\r\n    });\r\n  };\r\n\r\n  toggleModal = message => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false\r\n      });\r\n    }, 4000);\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AddTopicUI\r\n        {...this.state}\r\n        handleInputValues={this.handleInputValues}\r\n        handleSaveButton={this.handleSaveButton}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTopics;\r\n","import React from 'react'\r\n\r\nimport util from '../../Util/Util'\r\nimport Modal from '../Modal/'\r\n\r\nimport './style.css'\r\n\r\nclass EditTopic extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      topicName: props.editItem.name,\r\n      topicNameTitle: '',\r\n      editId: props.editItem.topic_id,\r\n      isModalVisible: false,\r\n      modalMessage: ''\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.editItem.topic_id !== this.props.editItem.topic_id) {\r\n      this.setState({\r\n        topicName: this.props.editItem.name,\r\n        editId: this.props.editItem.topic_id\r\n      })\r\n    }\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.editItem.topic_id !== prevState.topic_id) {\r\n      return nextProps\r\n    }\r\n    return null\r\n  }\r\n\r\n  updateData = async () => {\r\n    let body = {\r\n      topic_id: this.state.editId,\r\n      name: this.state.topicName\r\n    }\r\n\r\n    await util.FetchTopic.updateTopic(body)\r\n  }\r\n\r\n  handleInput = event => {\r\n    let item = event.target\r\n\r\n    if (item.value !== '') {\r\n      this.setState({\r\n        topicName: item.value,\r\n        topicNameTitle: ''\r\n      })\r\n    } else {\r\n      this.setState({\r\n        topicName: item.value,\r\n        topicNameTitle: 'Please fill out this field'\r\n      })\r\n    }\r\n  }\r\n\r\n  toggleModal = message => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false\r\n      })\r\n    }, 4000)\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message\r\n    })\r\n  }\r\n\r\n  handleSaveButton = async event => {\r\n    event.preventDefault()\r\n\r\n    let topicName = await this.state.topicName\r\n\r\n    if (!util.Alerts.alertIfIsEmpty(topicName, this.toggleModal)) {\r\n      await this.updateData()\r\n      this.props.closeEditComponent()\r\n      this.props.updateTableData()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let state = this.state\r\n    return (\r\n      <React.Fragment>\r\n        <div className='container edit_topic_container'>\r\n          <h1>Edit Topic</h1>\r\n\r\n          <form className='justify-content-start'>\r\n            <label className='font-weight-bold '>Name:</label>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              title={this.state.topicNameTitle}\r\n              value={state.topicName}\r\n              placeholder='Topic Name'\r\n              onChange={this.handleInput}\r\n            />\r\n\r\n            <button onClick={this.handleSaveButton} className='btn save_button'>\r\n              Save\r\n            </button>\r\n          </form>\r\n          <p onClick={this.props.closeEditComponent} className='text-primary'>\r\n            Add new topic\r\n          </p>\r\n        </div>\r\n        <Modal isVisible={state.isModalVisible} message={state.modalMessage} />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditTopic\r\n","import React from 'react'\r\n\r\nimport AddTopics from '../AddTopics/'\r\nimport EditTopic from '../EditTopic/'\r\n\r\nfunction TopicSelector(props) {\r\n  if (props.showEditComponent) {\r\n    return (\r\n      <EditTopic\r\n        editItem={props.editItem}\r\n        closeEditComponent={props.closeEditComponent}\r\n        updateTableData={props.updateTableData}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <AddTopics updateTableData={props.updateTableData} />\r\n}\r\n\r\nexport default TopicSelector\r\n","import React from 'react'\r\n\r\nimport TopicSelector from '../../Components/Selectors/Topic'\r\nimport Modal from '../../Components/Modal/'\r\n\r\nexport const TopicsUI = props => (\r\n  <React.Fragment>\r\n    <section className='topics_container'>\r\n      <TopicSelector\r\n        updateTableData={props.updateTableData}\r\n        closeEditComponent={props.closeEditComponent}\r\n        showEditComponent={props.showEditComponent}\r\n        editItem={props.editItem}\r\n      />\r\n      <div>\r\n        <h1 className=\"tp_title\">My Topics</h1>\r\n        <div className='tp_table_container overflow-auto'>\r\n          <table className='table table-striped'>\r\n            <thead className='thead-dark'>\r\n              <tr>\r\n                <th scope='col'>Id</th>\r\n                <th scope='col'>Name</th>\r\n                <th scope='col'>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <GenerateTableContent\r\n                tableData={props.tableData}\r\n                openEditComponent={props.openEditComponent}\r\n                handleDeleteButton={props.handleDeleteButton}\r\n              />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <Modal\r\n      isVisible={props.isModalVisible}\r\n      message={props.modalMessage}\r\n    />\r\n  </React.Fragment>\r\n)\r\n\r\nconst GenerateTableContent = props => {\r\n  if (props.tableData === undefined) return null\r\n\r\n  let tableContent = props.tableData.map((item, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{item.topic_id}</td>\r\n        <td>{item.name}</td>\r\n        <td>\r\n          <div>\r\n            <button\r\n              onClick={() => {\r\n                props.openEditComponent(item)\r\n              }}\r\n              className='btn btn-info'\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={event => props.handleDeleteButton(event, item.topic_id)}\r\n              className='btn btn-danger'\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return tableContent\r\n}\r\n","import React from 'react'\r\nimport Util from '../../Util/Util'\r\nimport ls from 'local-storage'\r\n\r\nimport { TopicsUI } from './ui'\r\n\r\nimport './style.css'\r\n\r\nclass Topics extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      tableData: [],\r\n      editItem: null,\r\n      isAValidToken : null,\r\n      showEditComponent: false,\r\n      isModalVisible: false,\r\n      modalMessage: ''\r\n    }\r\n\r\n    if (!Util.VerifyToken.isAValidToken()) document.location = '/?session_expired=true'\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleExpiredToken()\r\n  }\r\n\r\n  handleExpiredToken = async ()=>{\r\n    const isAValidToken = await Util.VerifyToken.isAValidToken();\r\n\r\n    if(isAValidToken){\r\n      this.setState({\r\n        isAValidToken : isAValidToken\r\n      });\r\n      this.updateTableData()\r\n    }else{\r\n      alert('Your session expired. Please login')\r\n      this.setState({\r\n        isAValidToken : isAValidToken\r\n      });\r\n      ls.remove('login_token')\r\n    }\r\n  }\r\n\r\n  updateTableData = async () => {\r\n    let tableData = await Util.FetchTopic.getTopics()\r\n\r\n    this.setState({\r\n      tableData: tableData\r\n    })\r\n  }\r\n\r\n  openEditComponent = item => {\r\n    this.setState({\r\n      editItem: item,\r\n      showEditComponent: true\r\n    })\r\n  }\r\n\r\n  closeEditComponent = () => {\r\n    this.setState({\r\n      showEditComponent: false\r\n    })\r\n  }\r\n\r\n  handleDeleteButton = async (event, id) => {\r\n    event.preventDefault()\r\n\r\n    let isConfirmed = prompt(\r\n      'Are you sure you want to delete this topic?[Yes/y]'\r\n    )\r\n\r\n    let relations = await Util.FetchResource.checkHowManyRelationsAre(id)\r\n\r\n    if (this.userWantsToDeleteTopic(isConfirmed, relations)) {\r\n      this.closeEditComponent()\r\n\r\n      await Util.FetchTopic.deleteTopic(id)\r\n      \r\n      this.updateTableData()\r\n    }\r\n  }\r\n\r\n  userWantsToDeleteTopic = (isConfirmed, relations) => {\r\n    if (isConfirmed === null) return false\r\n\r\n    isConfirmed = isConfirmed.toLowerCase()\r\n\r\n    if (isConfirmed === 'yes' || isConfirmed === 'y') {\r\n      if (relations.length === 0) return true\r\n\r\n      this.toggleModal(\r\n        'You should remove the resources that references this topic'\r\n      )\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  toggleModal = message => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false\r\n      })\r\n    }, 5000)\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isAValidToken === null) return null\r\n\r\n    if(!this.state.isAValidToken) document.location = '/'\r\n    return (\r\n      <TopicsUI\r\n        {...this.state}\r\n        updateTableData={this.updateTableData}\r\n        closeEditComponent={this.closeEditComponent}\r\n        openEditComponent={this.openEditComponent}\r\n        handleDeleteButton={this.handleDeleteButton}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Topics\r\n","import React from 'react'\r\n\r\nfunction Input(props) {\r\n  let type = 'text'\r\n\r\n  if (props.type) type = props.type\r\n\r\n  return (\r\n    <div>\r\n      <label className='font-weight-bold'>{props.label}</label>\r\n      <input\r\n        onChange={props.handleInputs}\r\n        type={type}\r\n        name={props.name}\r\n        value={props.value}\r\n        title={props.title}\r\n        className='form-control'\r\n        placeholder={props.placeholder}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n\r\nimport Input from '../Input/'\r\nimport Modal from '../Modal/'\r\n\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nexport const EditResourceUI = props => (\r\n  <React.Fragment>\r\n    <div className='edit_resource_container'>\r\n      <h1>Edit Resource</h1>\r\n\r\n      <form className='justify-content-start'>\r\n        <Input\r\n          name='description'\r\n          label='Description:'\r\n          handleInputs={props.handleInputValues}\r\n          value={props.descriptionValue}\r\n          title={props.descriptionTitle}\r\n          placeholder='Description'\r\n        />\r\n\r\n        <Input\r\n          name='url'\r\n          label='URL:'\r\n          handleInputs={props.handleInputValues}\r\n          value={props.urlValue}\r\n          title={props.urlTitle}\r\n          placeholder='URL'\r\n        />\r\n\r\n        <div className='dropdown-edit-resource'>\r\n          <label className='font-weight-bold'>Resource:</label>\r\n\r\n          <div className='dropdown'>\r\n            <button\r\n              onClick={event => event.preventDefault()}\r\n              className='dropbtn'\r\n            >\r\n              {props.dropdownValue}\r\n            </button>\r\n\r\n            <div className='dropdown-content overflow-auto'>\r\n              <GenerateDropdownItems\r\n                dropdownItems={props.dropdownItems}\r\n                handleDropdownMenu={props.handleDropdownMenu}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button onClick={props.handleSaveButton} className='btn btn-success'>\r\n          Save\r\n        </button>\r\n      </form>\r\n\r\n      <p className='text-primary' onClick={props.closeEditComponent}>\r\n        Back to list\r\n      </p>\r\n    </div>\r\n    <Modal\r\n      isVisible={props.isModalVisible}\r\n      message={props.modalMessage}\r\n    />\r\n  </React.Fragment>\r\n)\r\n\r\nfunction GenerateDropdownItems(props) {\r\n  let dropdownItems = props.dropdownItems\r\n\r\n  let dropdown = dropdownItems.map((item, index) => {\r\n    return (\r\n      <p key={index} onClick={event => props.handleDropdownMenu(event, item)}>\r\n        {item.topic_id} - {item.name}\r\n      </p>\r\n    )\r\n  })\r\n\r\n  return dropdown\r\n}\r\n","import React from \"react\";\r\nimport util from \"../../Util/Util\";\r\n\r\nimport { EditResourceUI } from \"./ui\";\r\n\r\nclass EditResources extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const selectedItem = props.selectedItem;\r\n\r\n    const componentsValues = {\r\n      resourceIdValue: selectedItem.resource_id,\r\n      descriptionValue: selectedItem.description,\r\n      topicIdValue: selectedItem.topic.topic_id,\r\n      urlValue: selectedItem.url,\r\n      dropdownValue: `${selectedItem.topic.topic_id} - ${selectedItem.topic.name}`\r\n    };\r\n\r\n    const componentsTitles = {\r\n      descriptionTitle: \"\",\r\n      urlTitle: \"\"\r\n    };\r\n\r\n    this.state = {\r\n      ...componentsValues,\r\n      ...componentsTitles,\r\n      modalMessage: \"\",\r\n      dropdownItems: [],\r\n      isModalVisible: false\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    let data = await util.FetchTopic.getTopics();\r\n    this.setState({\r\n      dropdownItems: data\r\n    });\r\n  };\r\n\r\n  //In this case this will update the selected Item data\r\n  componentDidUpdate(prevProps) {\r\n    let prevResourceId = prevProps.selectedItem.resource_id;\r\n    let nextResourceId = this.props.selectedItem.resource_id;\r\n\r\n    if (prevResourceId !== nextResourceId) {\r\n      let selectedItem = this.props.selectedItem;\r\n\r\n      this.setState({\r\n        resource_id: selectedItem.resource_id,\r\n        descriptionValue: selectedItem.description,\r\n        urlValue: selectedItem.url,\r\n        resourceValue: selectedItem.topic.topic_id,\r\n        dropdownValue: `${selectedItem.topic.topic_id} - ${selectedItem.topic.name}`\r\n      });\r\n    }\r\n  }\r\n\r\n  //This function will check when a new prop is passed\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let selectedItem = nextProps.selectedItem;\r\n\r\n    if (selectedItem.resource_id !== prevState.resource_id) {\r\n      return nextProps;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  handleDropdownMenu = (event, item) => {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      topicIdValue: item.topic_id,\r\n      dropdownValue: `${item.topic_id} - ${item.name}`\r\n    });\r\n  };\r\n\r\n  handleInputValues = event => {\r\n    let component = event.target;\r\n    let itemValues = {\r\n      [component.name + \"Value\"]: component.value,\r\n      [component.name + \"Title\"]: \"Please fill out this field\"\r\n    };\r\n\r\n    if (component.value) itemValues[component.name + \"Title\"] = \"\";\r\n\r\n    this.setState(itemValues);\r\n  };\r\n\r\n  handleSaveButton = async event => {\r\n    event.preventDefault();\r\n\r\n    let objectCollection = [this.state.urlValue, this.state.descriptionValue];\r\n\r\n    if (\r\n      !util.Alerts.alertIfObjectsAreEmpty(objectCollection, this.toggleModal)\r\n    ) {\r\n      this.updateResource();\r\n    }\r\n  };\r\n\r\n  updateResource = async () => {\r\n    let body = {\r\n      resource_id: this.state.resourceIdValue,\r\n      description: this.state.descriptionValue,\r\n      url: this.state.urlValue,\r\n      topic: {\r\n        topic_id: this.state.topicIdValue\r\n      }\r\n    };\r\n\r\n    await util.FetchResource.update(body);\r\n\r\n    this.props.closeEditComponent();\r\n  };\r\n\r\n  toggleModal = message => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false\r\n      });\r\n    }, 4000);\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditResourceUI\r\n        {...this.state}\r\n        handleInputValues={this.handleInputValues}\r\n        handleDropdownMenu={this.handleDropdownMenu}\r\n        handleSaveButton={this.handleSaveButton}\r\n        closeEditComponent={this.props.closeEditComponent}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditResources;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"../Modal/\";\r\n\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nexport const AddResourceUI = props => (\r\n  <React.Fragment>\r\n    <div className=\"add_resource_container\">\r\n      <h1>Add Resource</h1>\r\n\r\n      <form>\r\n        <input\r\n          onChange={props.handleInputsValues}\r\n          value={props.descriptionValue}\r\n          name=\"description\"\r\n          type=\"text\"\r\n          title={props.descriptionTitle}\r\n          className=\"form-control\"\r\n          placeholder=\"Description\"\r\n        />\r\n\r\n        <input\r\n          onChange={props.handleInputsValues}\r\n          value={props.urlValue}\r\n          name=\"url\"\r\n          title={props.urlTitle}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"URL\"\r\n        />\r\n\r\n        <div className=\"dropdown\">\r\n          <button onClick={event => event.preventDefault()} className=\"dropbtn\">\r\n            {props.dropdownValue}\r\n          </button>\r\n          <div className=\"dropdown-content overflow-auto\">\r\n            <GenerateDropdownItems\r\n              dropdownItems={props.dropdownItems}\r\n              handleDropdown={props.handleDropdown}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <button onClick={props.handleSaveButton} className=\"btn save_button\">\r\n            Save\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <Modal isVisible={props.isModalVisible} message={props.modalMessage} />\r\n  </React.Fragment>\r\n);\r\n\r\nconst GenerateDropdownItems = props => {\r\n  let dropdownItems = props.dropdownItems;\r\n\r\n  let dropdown = dropdownItems.map((item, index) => {\r\n    return (\r\n      <p key={index} onClick={event => props.handleDropdown(event, item)}>\r\n        {item.topic_id} - {item.name}\r\n      </p>\r\n    );\r\n  });\r\n\r\n  return dropdown;\r\n};\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nexport const ResourceError = () => (\r\n  <div className='re_container'>\r\n    <h1>Hey!</h1>\r\n    <h2>To add a new resource you should first add a Topic.</h2>\r\n    <Link to='/training/topics'>Click here to add a new topic</Link>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport util from '../../Util/Util'\r\n\r\nimport { AddResourceUI } from './ui'\r\nimport { ResourceError } from '../ResourceError/'\r\n\r\nclass AddResource extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    const componentsValues = {\r\n      descriptionValue: '',\r\n      urlValue: '',\r\n      dropdownValue: '',\r\n      resourceValue: undefined\r\n    }\r\n\r\n    const componentsTitles = {\r\n      descriptionTitle: 'Please fill out this field',\r\n      urlTitle: 'Please fill out this field'\r\n    }\r\n\r\n    this.state = {\r\n      ...componentsValues,\r\n      ...componentsTitles,\r\n      modalMessage: '',\r\n      dropdownItems: null,\r\n      isModalVisible: false\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let dropdownItems = await util.FetchTopic.getTopics()\r\n\r\n    this.showAddTopicComponent(dropdownItems)\r\n  }\r\n\r\n  showAddTopicComponent = dropdownItems => {\r\n    if (dropdownItems.length !== 0) {\r\n      let dropdownValue = `${dropdownItems[0].topic_id} - ${dropdownItems[0].name}`\r\n      let resourceValue = dropdownItems[0].topic_id\r\n\r\n      this.setState({\r\n        dropdownItems: dropdownItems,\r\n        resourceValue: resourceValue,\r\n        dropdownValue: dropdownValue\r\n      })\r\n    } else {\r\n      this.setState({\r\n        dropdownItems: []\r\n      })\r\n    }\r\n  }\r\n\r\n  handleDropdown = (event, item) => {\r\n    event.preventDefault()\r\n\r\n    this.setState({\r\n      resourceValue: item.topic_id,\r\n      dropdownValue: `${item.topic_id} - ${item.name}`\r\n    })\r\n  }\r\n\r\n  handleInputsValues = event => {\r\n    const component = event.target\r\n    let itemValues = {\r\n      [component.name + 'Value']: component.value,\r\n      [component.name + 'Title']: 'Please fill out this field'\r\n    }\r\n\r\n    if (component.value) itemValues[component.name + 'Title'] = ''\r\n\r\n    this.setState(itemValues)\r\n  }\r\n\r\n  handleSaveButton = async event => {\r\n    event.preventDefault()\r\n\r\n    const objectCollection = [\r\n      this.state.resourceValue,\r\n      this.state.descriptionValue,\r\n      this.state.urlValue\r\n    ]\r\n\r\n    if (\r\n      !util.Alerts.alertIfObjectsAreEmpty(objectCollection, this.toggleModal)\r\n    ) {\r\n      this.saveNewResource()\r\n    }\r\n  }\r\n\r\n  saveNewResource = async () => {\r\n    const body = {\r\n      description: this.state.descriptionValue,\r\n      url: this.state.urlValue,\r\n      topic: {\r\n        topic_id: this.state.resourceValue\r\n      }\r\n    }\r\n\r\n    await util.FetchResource.save(body)\r\n\r\n    this.cleanInputsValues()\r\n    this.props.updateTableContent()\r\n  }\r\n\r\n  cleanInputsValues = () => {\r\n    let dropdownValue = `${this.state.dropdownItems[0].topic_id} - ${this.state.dropdownItems[0].name}`\r\n\r\n    this.setState({\r\n      resourceValue: this.state.dropdownItems[0].topic_id,\r\n      dropdownValue: dropdownValue,\r\n      descriptionValue: '',\r\n      urlValue: ''\r\n    })\r\n  }\r\n\r\n  toggleModal = message => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false\r\n      })\r\n    }, 4000)\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { dropdownItems } = this.state\r\n\r\n    if (dropdownItems !== null) {\r\n      if (dropdownItems.length === 0) return <ResourceError />\r\n\r\n      return (\r\n        <AddResourceUI\r\n          {...this.state}\r\n          handleInputsValues={this.handleInputsValues}\r\n          handleDropdown={this.handleDropdown}\r\n          handleSaveButton={this.handleSaveButton}\r\n        />\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n}\r\n\r\nexport default AddResource\r\n","import React from 'react'\r\n\r\nimport EditResource from '../EditResource/'\r\nimport AddResource from '../AddResource/'\r\n\r\nfunction Resource(props) {\r\n  if (props.status === 'EDIT') {\r\n    return (\r\n      <EditResource\r\n        closeEditComponent={props.closeEditComponent}\r\n        selectedItem={props.selectedItem}\r\n      />\r\n    )\r\n  }\r\n\r\n  return <AddResource updateTableContent={props.closeEditComponent} />\r\n}\r\n\r\nexport default Resource\r\n","import React from 'react'\r\n\r\nimport ResourceSelector from '../../Components/Selectors/Resource'\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nexport const MyResourcesUI = props => (\r\n  <section className='my_resources_container'>\r\n    <ResourceSelector\r\n      closeEditComponent={props.closeEditComponent}\r\n      selectedItem={props.selectedItem}\r\n      status={props.crudStatus}\r\n    />\r\n    <div>\r\n      <h1 className=\"mr_title\">My Resources</h1>\r\n      <div className='mr_table_container overflow-auto'>\r\n        <table className='table table-striped'>\r\n          <thead className='thead-dark'>\r\n            <tr>\r\n              <th scope='column'>Id</th>\r\n              <th scope='column'>Url</th>\r\n              <th scope='column'>Topic</th>\r\n              <th scope='column'>Description Name</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <GenerateTableContent\r\n              tableData={props.tableData}\r\n              handleDeleteButton={props.handleDeleteButton}\r\n              openEditComponent={props.openEditComponent}\r\n            />\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </section>\r\n)\r\n\r\nconst GenerateTableContent = props => {\r\n  let tableContent = props.tableData.map((item, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{item.resource_id}</td>\r\n        <td>\r\n          <a href={item.url}>{item.url}</a>\r\n        </td>\r\n        <td>{`${item.topic.topic_id}-${item.topic.name}`}</td>\r\n        <td>{item.description}</td>\r\n        <td>\r\n          <div>\r\n            <button\r\n              onClick={event => props.openEditComponent(event, item)}\r\n              className='btn btn-info'\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              onClick={event =>\r\n                props.handleDeleteButton(event, item.resource_id)\r\n              }\r\n              className='btn btn-danger'\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return tableContent\r\n}\r\n","import React from 'react'\r\nimport Util from '../../Util/Util'\r\nimport ls from 'local-storage'\r\n\r\nimport { MyResourcesUI } from './ui'\r\n\r\nclass MyResources extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      tableData: [],\r\n      crudStatus: 'ADD',\r\n      selectedItem: undefined,\r\n      isAValidToken : null\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.handleExpiredToken()\r\n  }\r\n\r\n  handleExpiredToken = async ()=>{\r\n    const isAValidToken = await Util.VerifyToken.isAValidToken();\r\n\r\n    if(isAValidToken){\r\n      this.setState({\r\n        isAValidToken : isAValidToken\r\n      });\r\n      await this.getResourcesItems()\r\n    }else{\r\n      alert('Your session expired. Please login')\r\n      this.setState({\r\n        isAValidToken : isAValidToken\r\n      });\r\n      ls.remove('login_token')\r\n    }\r\n  }\r\n\r\n  getResourcesItems = async () => {\r\n    let tableData = await Util.FetchResource.getAll()\r\n\r\n    this.setState({\r\n      tableData: tableData\r\n    })\r\n  }\r\n\r\n  handleDeleteButton = async (event, resource_id) => {\r\n    event.preventDefault()\r\n\r\n    let wantToDeleteItem = prompt(\r\n      'Are you sure you want to delete this topic?[Yes/y]'\r\n    )\r\n\r\n    if (wantToDeleteItem === null) return\r\n\r\n    wantToDeleteItem = wantToDeleteItem.toLowerCase()\r\n\r\n    if (wantToDeleteItem === 'yes' || wantToDeleteItem === 'y') {\r\n      await Util.FetchResource.delete(resource_id)\r\n\r\n      this.closeEditComponent()\r\n    }\r\n  }\r\n\r\n  openEditComponent = (event, item) => {\r\n    event.preventDefault()\r\n    this.setState({\r\n      selectedItem: item,\r\n      crudStatus: 'EDIT'\r\n    })\r\n  }\r\n\r\n  closeEditComponent = async () => {\r\n    await this.getResourcesItems()\r\n\r\n    this.setState({\r\n      crudStatus: 'ADD'\r\n    })\r\n  }\r\n  \r\n\r\n  render(){    \r\n    if(this.state.isAValidToken === null) return null\r\n\r\n    if(!this.state.isAValidToken) document.location = '/'\r\n\r\n    return (\r\n      <MyResourcesUI\r\n        {...this.state}\r\n        closeEditComponent={this.closeEditComponent}\r\n        handleDeleteButton={this.handleDeleteButton}\r\n        openEditComponent={this.openEditComponent}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MyResources\r\n","import React from 'react'\r\n\r\nimport Input from '../../Components/Input/'\r\n\r\nexport const LoginForm = (props) => (\r\n  <form>\r\n    <Input\r\n      handleInputs={props.handleInputs}\r\n      value={props.emailValue}\r\n      name='email'\r\n      title={props.emailTitle}\r\n      placeholder='Email'\r\n    />\r\n    <Input\r\n      handleInputs={props.handleInputs}\r\n      value={props.passwordValue}\r\n      name='password'\r\n      type='password'\r\n      title={props.passwordTitle}\r\n      placeholder='Password'\r\n    />\r\n    <button onClick={props.handleLoginButton} className='btn btn-success'>\r\n      Log in\r\n    </button>\r\n  </form>\r\n)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\nimport Modal from '../../Components/Modal/'\r\nimport { LoginForm } from '../../Components/LoginForm'\r\n\r\nimport './style.css'\r\n\r\nexport const LoginUI = props => (\r\n  <React.Fragment>\r\n    <section className='login_container'>\r\n      <div>\r\n        <FacebookLogin\r\n          id='facebook_login_button'\r\n          appId='2627135220683277'\r\n          fields='name,email,picture'\r\n          callback={props.handleFBButton}\r\n          render={renderProps => (\r\n            <button\r\n              className='btn btn-lg btn-block facebook_login_button'\r\n              onClick={renderProps.onClick}\r\n            >\r\n              Login with Facebook\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n\r\n      <LoginForm {...props} />\r\n\r\n      <p>\r\n        Don't have an account?<Link to='/training/signup'>Sign up</Link>\r\n      </p>\r\n    </section>\r\n    <Modal isVisible={props.isModalVisible} message={props.modalMessage} />\r\n  </React.Fragment>\r\n)\r\n","import React from 'react'\r\nimport ls from 'local-storage'\r\nimport util from '../../Util/Util'\r\n\r\nimport { LoginUI } from './ui'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      passwordTitle: 'Please fill out this field',\r\n      emailTitle: 'Please fill out this field',\r\n      emailValue: '',\r\n      passwordValue: '',\r\n      modalMessage: '',\r\n      isModalVisible: false\r\n    }\r\n  }\r\n\r\n  handleInputs = event => {\r\n    let component = event.target\r\n    let itemValues = {\r\n      [component.name + 'Value']: component.value,\r\n      [component.name + 'Title']: 'Please fill out this field'\r\n    }\r\n\r\n    if (component.value) itemValues[component.name + 'Title'] = ''\r\n\r\n    this.setState(itemValues)\r\n  }\r\n\r\n  handleFBButton = async ({email,accessToken}) => {\r\n    const body = {\r\n      email: email,\r\n      fbtoken: accessToken\r\n    }\r\n\r\n    await util.FetchLogin.fbLogin(body)\r\n\r\n    if (ls.get('login_token')) {\r\n      document.location = '/'\r\n    } else {\r\n      this.toggleModal('You should signup first')\r\n    }\r\n  }\r\n\r\n  handleLoginButton = async event => {\r\n    event.preventDefault()\r\n\r\n    const email = this.state.emailValue\r\n    const alert = util.Alerts\r\n    const objectCollection = [this.state.passwordValue, email]\r\n\r\n    if (!alert.invalidData(objectCollection, email, this.toggleModal)) return\r\n\r\n    await this.login()\r\n\r\n    if (ls.get('login_token')) {\r\n      document.location = '/'\r\n    } else {\r\n      this.toggleModal('Please verify your email and password')\r\n    }\r\n  }\r\n\r\n  login = async () => {\r\n    let body = {\r\n      email: this.state.emailValue,\r\n      password: this.state.passwordValue\r\n    }\r\n\r\n    await util.FetchLogin.login(body)\r\n  }\r\n\r\n  toggleModal = message => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false\r\n      })\r\n    }, 5000)\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoginUI\r\n        {...this.state}\r\n        handleFBButton={this.handleFBButton}\r\n        handleInputs={this.handleInputs}\r\n        handleLoginButton={this.handleLoginButton}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nimport Input from '../../Components/Input/'\r\n\r\nexport const SignupForm = (props) => (\r\n  <form>\r\n    <p className='h5'>Sign up with your email address</p>\r\n    <Input\r\n      value={props.emailValue}\r\n      handleInputs={props.handleInputs}\r\n      name='email'\r\n      title={props.emailTitle}\r\n      placeholder='Email'\r\n    />\r\n    <Input\r\n      value={props.passwordValue}\r\n      handleInputs={props.handleInputs}\r\n      name='password'\r\n      type='password'\r\n      title={props.passwordTitle}\r\n      placeholder='password'\r\n    />\r\n    <Input\r\n      value={props.nameValue}\r\n      handleInputs={props.handleInputs}\r\n      name='name'\r\n      title={props.nameTitle}\r\n      placeholder='Name'\r\n    />\r\n    <button onClick={props.handleSignup} className='btn btn-success'>\r\n      Sign Up\r\n    </button>\r\n  </form>\r\n)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Modal from '../../Components/Modal/'\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\r\nimport { SignupForm } from '../../Components/SignupForm/'\r\n\r\nif(process.env.NODE_ENV !== 'test') require('./style.css')\r\n\r\nexport const SignUpUI = props => (\r\n  <React.Fragment>\r\n    <section className='signup_container'>\r\n      <div>\r\n        <FacebookLogin\r\n          id='facebook_login_button'\r\n          appId='2627135220683277'\r\n          fields='name,email,picture'\r\n          callback={props.handleFBButton}\r\n          render={renderProps => (\r\n            <button\r\n              className='btn btn-lg btn-block facebook_login_button'\r\n              onClick={renderProps.onClick}\r\n            >\r\n              Sign up with Facebook\r\n            </button>\r\n          )}\r\n        />\r\n      </div>\r\n      <SignupForm {...props} />\r\n      <p>\r\n        Already have an account? \r\n        <Link to='/training/login'> Log in</Link>\r\n      </p>\r\n    </section>\r\n    <Modal\r\n      isVisible={props.isModalVisible}\r\n      message={props.modalMessage}\r\n      successModal={props.isASuccessModal}\r\n    />\r\n  </React.Fragment>\r\n)\r\n","import React from 'react'\r\nimport util from '../../Util/Util'\r\n\r\nimport { SignUpUI } from './ui'\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      emailTitle: 'Please fill out this field',\r\n      passwordTitle: 'Please fill out this field',\r\n      nameTitle: 'Please fill out this field',\r\n      emailValue: '',\r\n      passwordValue: '',\r\n      nameValue: '',\r\n      modalMessage: '',\r\n      isModalVisible: false,\r\n      isASuccessModal: false\r\n    }\r\n  }\r\n\r\n  handleInputs = event => {\r\n    let component = event.target\r\n    let itemValues = {\r\n      [component.name + 'Value']: component.value,\r\n      [component.name + 'Title']: 'Please fill out this field'\r\n    }\r\n\r\n    if (component.value) itemValues[component.name + 'Title'] = ''\r\n\r\n    this.setState(itemValues)\r\n  }\r\n\r\n  handleFBButton = async ({email,name,accessToken}) => {\r\n    if(email){\r\n      let body = {\r\n        email: email,\r\n        name: name,\r\n        fbtoken: accessToken\r\n      }\r\n  \r\n      await this.insertFBUser(body)\r\n    }else{\r\n      this.toggleModal(\"Your Facebook Account doesnt have an email\")\r\n    }\r\n  }\r\n\r\n  insertFBUser = async body => {\r\n    let status = await util.FetchSignup.signupFB(body)\r\n\r\n    switch (status) {\r\n      case 200:\r\n        this.toggleModal('User was registered!', true)\r\n        break\r\n      case 406:\r\n        this.toggleModal('This user is already registered')\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  handleSignup = event => {\r\n    event.preventDefault()\r\n\r\n    const email = this.state.emailValue\r\n    const alert = util.Alerts\r\n    const objectCollection = [\r\n      this.state.passwordValue,\r\n      email,\r\n      this.state.nameValue\r\n    ]\r\n\r\n    if (alert.invalidData(objectCollection, email, this.toggleModal)) {\r\n      this.signUp()\r\n    }\r\n  }\r\n\r\n  signUp = async () => {\r\n    let body = {\r\n      email: this.state.emailValue,\r\n      password: this.state.passwordValue,\r\n      name: this.state.nameValue\r\n    }\r\n\r\n    let status = await util.FetchSignup.signup(body)\r\n\r\n    switch (status) {\r\n      case 200:\r\n        this.toggleModal('User was registered!', true)\r\n        this.cleanInputs()\r\n        break\r\n      case 406:\r\n        this.toggleModal('This user is already registered')\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  toggleModal = async (message, successModal) => {\r\n    setTimeout(() => {\r\n      this.setState({\r\n        isModalVisible: false,\r\n        successModal: false\r\n      })\r\n    }, 3000)\r\n\r\n    this.setState({\r\n      isModalVisible: !this.isModalVisible,\r\n      modalMessage: message,\r\n      isASuccessModal: successModal\r\n    })\r\n  }\r\n\r\n  cleanInputs = () => {\r\n    this.setState({\r\n      emailValue: '',\r\n      passwordValue: '',\r\n      nameValue: ''\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <SignUpUI\r\n        {...this.state}\r\n        handleFBButton={this.handleFBButton}\r\n        handleSignup={this.handleSignup}\r\n        handleInputs={this.handleInputs}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './style.css'\r\nimport AvanticaLogo from '../../Images/avantica.png'\r\n\r\nclass Page404 extends React.Component {\r\n  render() {\r\n    return (\r\n      <section className='container page_404_container'>\r\n        <img src={AvanticaLogo} alt='Avantica' />\r\n        <h2>Ups, that page doesn't exists...</h2>\r\n        <Link to='/AvanticaTraining/' className='h5'>\r\n          Click here to go home\r\n        </Link>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Page404\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport './style.css'\r\n\r\nexport const SidebarMenu = props => (\r\n  <div className='sidebar_menu_responsive'>\r\n    <div className='sidebar_menu_icon'>\r\n      <div className='sidebar_menu_content'>\r\n        <h4>Avantica Training</h4>\r\n        <div className='line'></div>\r\n        <Link to='/training/top' className='navbar-brand'>\r\n          Avantica Training\r\n        </Link>\r\n        <Link to='/training/topics' className='navbar-brand'>\r\n          Topics\r\n        </Link>\r\n        <Link to='/training/resources' className='navbar-brand'>\r\n          Resources\r\n        </Link>\r\n        <p onClick={props.handleLogout} className='navbar-brand'>\r\n          Log out\r\n        </p>\r\n      </div>\r\n    </div>\r\n    <p>Avantica Training</p>\r\n  </div>\r\n)\r\n\r\nexport const SidebarMenuUnlogged = () => (\r\n  <div className='sidebar_menu_responsive'>\r\n    <div className='sidebar_menu_icon'>\r\n      <div className='sidebar_menu_content'>\r\n        <h4>Avantica Training</h4>\r\n        <div className='line'></div>\r\n        <Link to='/training/top' className='navbar-brand'>\r\n          Avantica Training\r\n        </Link>\r\n        <Link to='/training/login' className='navbar-brand'>\r\n          Login\r\n        </Link>\r\n        <Link to='/training/signup' className='navbar-brand'>\r\n          Sign up\r\n        </Link>\r\n      </div>\r\n    </div>\r\n    <p>Avantica Training</p>\r\n  </div>\r\n)\r\n","import React from 'react'\r\nimport ls from 'local-storage'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { SidebarMenu } from '../SidebarMenu/';\r\nimport './style.css'\r\n\r\nclass NavbarLogged extends React.Component {\r\n  handleLogout = event => {\r\n    ls.remove('login_token')\r\n    document.location = '/'\r\n  }\r\n  render() {\r\n    return (\r\n      <nav className='navbar navbar-light bg-light'>\r\n        <div className='container-fluid'>\r\n          <div className='navbar-header'>\r\n            <Link to='/AvanticaTraining/' className='navbar-brand'>\r\n              Avantica Training\r\n            </Link>\r\n            <Link to='/training/topics' className='navbar-brand active'>\r\n              Topics\r\n            </Link>\r\n            <Link to='/training/resources' className='navbar-brand'>\r\n              Resources\r\n            </Link>\r\n          </div>\r\n          <ul className='d-flex justify-content-end'>\r\n            <li className='nav-item'>\r\n              <button onClick={this.handleLogout} className='nav-link'>\r\n                Log out\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <SidebarMenu handleLogout={this.handleLogout}/>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarLogged\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport './style.css'\r\nimport { SidebarMenuUnlogged } from '../SidebarMenu/';\r\n\r\nclass NavbarLogged extends React.Component {\r\n  render() {\r\n    return (\r\n      <nav className='navbar navbar-light bg-light'>\r\n        <div className='container-fluid'>\r\n          <div className='navbar-header'>\r\n            <Link to='/AvanticaTraining/' className='navbar-brand active'>\r\n              Avantica Training\r\n            </Link>\r\n          </div>\r\n          <ul className='d-flex justify-content-end'>\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to='/training/login'>\r\n                Login\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link className='nav-link' to='/training/signup'>\r\n                Sign up\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <SidebarMenuUnlogged handleLogout={this.handleLogout}/>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavbarLogged\r\n","import React from 'react'\r\nimport ls from 'local-storage'\r\n\r\nimport NavbarLogged from './NavbarLogged'\r\nimport NavbarUnlogged from './NavbarUnlogged'\r\n\r\n//This components handle which navbar to use\r\n//Because the app has two, when is logged and unlogged\r\nfunction Navbar() {\r\n  if (ls.get('login_token')) return <NavbarLogged></NavbarLogged>\r\n\r\n  return <NavbarUnlogged></NavbarUnlogged>\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\n\r\nimport Navbar from '../Navbar/'\r\n\r\n//This components allow the webpage to use the same\r\n//navbar in the whole app without copying and pasting\r\n//the same component in all the pages\r\nfunction Layout(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar></Navbar>\r\n      {props.children}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React from \"react\";\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { Home } from \"./Pages/Home/\";\r\nimport Topics from \"./Pages/Topics/\";\r\nimport MyResources from \"./Pages/MyResources/\";\r\nimport Login from \"./Pages/Login/\";\r\nimport SignUp from \"./Pages/SignUp/\";\r\nimport Page404 from \"./Pages/Page404/\";\r\nimport Layout from \"./Components/Layout/\";\r\n\r\n//This component allows the app to set routes and allow the navigation between them\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/AvanticaTraining/\" component={Home} />\r\n            <Route exact path=\"/training/signup\" component={SignUp} />\r\n            <Route exact path=\"/training/login\" component={Login} />\r\n            <Route exact path=\"/training/topics\" component={Topics} />\r\n            <Route exact path=\"/training/resources\" component={MyResources} />\r\n            <Route component={Page404} />\r\n          </Switch>\r\n        </Layout>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"./index.css\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nimport App from \"./App\";\r\n\r\nwindow.scroll({\r\n  top: 2500,\r\n  left: 0,\r\n  behavior: \"smooth\"\r\n});\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}